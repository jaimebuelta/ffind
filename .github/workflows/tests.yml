# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "pypy-3.9", "pypy-3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pyflakes cram python-coveralls codecov build hatchling
    - name: Get package version
      id: get_version
      run: |
        VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    - name: Lint with pyflakes
      run: |
        pyflakes *.py src/ffind/*.py
    - name: Build package
      run: |
        hatchling build
    - name: Install wheel
      run: |
        pip install dist/ffind-${{ steps.get_version.outputs.version }}-py3-none-any.whl
    - name: Run ffind with pyflakes
      run: |
        ffind --ignore-vcs . '(?<!argparse).py$' --exec=pyflakes
    - name: Specific tests for CI
      run: |
        make githubactions
    - name: Show coverage files
      run: |
        ls -lrt ./.coverage
    - name: Cove coverage
      run: |
        codecov

  publish:
    needs: build

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build package
      run: |
        python -m pip install --upgrade pip
        python -m pip install hatchling
        hatchling build
    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: dist/

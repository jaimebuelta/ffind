.TH ffind v1.1.2 \- A sane replacement for command line file search
.PP
\fIInfo:\fP An utility to search files recursively on a dir.
.PP
\fIAuthor:\fP Jaime Buelta
.PP
.SH About
.PP
Basically, replaces \fB\fCfind . \-name '*FILE_PATTERN*'\fR with \fB\fCffind.py FILE_PATTERN\fR
.RS
.IP \(bu 2
Input filename maybe a regex
.IP \(bu 2
Search recursively on current directory by default.
.IP \(bu 2
If the FILE_PATTERN is all in lowercase, the search will be case insensitive, unless a flag is set.
.IP \(bu 2
Regex can affect only the filename (default) or the full path.
.IP \(bu 2
Will print colorized output in glamorous red (default), except on redirected output.
.IP \(bu 2
Ignores hidden directories (directories starting with .) by default, but this can be disabled
.IP \(bu 2
Can ignore source control common directories
.IP \(bu 2
Follow symlinks by default, but that can be deactivated if necessary to avoid recursion problems
.IP \(bu 2
Works in python2.7 and python3. \fBIt is recommended in Python 3.5 or later due performance improvements. It's much faster!\fP
.IP \(bu 2
Can delete matched files
.IP \(bu 2
Can execute a command on matched files
.IP \(bu 2
Experimental fuzzy search
.RE
.PP
Common uses:
.RS
.IP \(bu 2
\fB\fCffind txt\fR to return all text files in current dir
.IP \(bu 2
\fB\fCffind ../other_dir txt\fR to return all text files under dir ../other\fIdir (or `ffind.py txt \-d ../other\fPdir`)
.RE
.SH All options
.PP
.RS
.nf
usage: ffind.py [\-h] [\-p] [\-\-nocolor] [\-\-nosymlinks] [\-\-hidden] [\-c]
            [\-\-delete | \-\-exec "command" | \-\-module "module_name args" | \-\-command "program"]
            [\-\-ignore\-vcs] [\-f] [\-\-version]
            [dir] filepattern

Search file name in directory tree

positional arguments:
  dir                   Directory to search
  filepattern

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-p                    Match whole path, not only name of files
  \-\-nocolor             Do not display color
  \-\-nosymlinks          Do not follow symlinks (following symlinks can lead to
                        infinite recursion)
  \-\-hidden              Do not ignore hidden directories
  \-c                    Force case sensitive. By default, all lowercase
                        patterns are case insensitive
  \-\-delete              Delete files found
  \-\-exec "command"      Execute the given command with the file found as
                        argument. The string '{}' will be replaced with the
                        current file name being processed. If this option is
                        used, ffind will return a status code of 0 if all the
                        executions return 0, and 1 otherwise
  \-\-module "module_name args"
                        Execute the given module with the file found as
                        argument. The string '{}' will be replaced with the
                        current file name being processed. If this option is
                        used, ffind will return a status code of 0 if all the
                        executions return 0, and 1 otherwise. Only SystemExit
                        is caught
  \-\-command "program"   Execute the given python program with the file found
                        placed in local variable 'filename'. If this option is
                        used, ffind will return a status code of 1 if any
                        exceptions occur, and 0 otherwise. SystemExit is not
                        caught
  \-\-ignore\-vcs          Ignore version control system files and directories
  \-f                    Experimental fuzzy search. Increases the matches, use
                        with care. Combining it with regex may give crazy
                        results
  \-\-version             show program's version number and exit
.fi
.RE
.SH Install
.PP
pip install ffind
.SH Manual Install
.PP
python setup.py install
.SH Test
.PP
It requires to install cram \[la]https://bitheap.org/cram/\[ra] (it can be installed with \fB\fCpip install cram\fR)
.PP
To run all the tests, run \fB\fCmake test\fR\&. This runs the tests on both Python 2 and Python 3. Running just
\fB\fCmake\fR runs the test for Python 3.
.PP
The tests are under the \fB\fCtests\fR directory, more tests are welcome.
